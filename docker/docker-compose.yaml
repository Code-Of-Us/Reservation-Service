version: "3.9"

services:
  postgres:
    container_name: postgres
    image: postgres:15
    environment:
      POSTGRES_USERNAME: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "reservations"
    ports:
      - "5433:5433"
  eureka:
    container_name: "eureka_server"
    image: "springcloud/eureka"
    ports:
      - "8761:8761"
  config-server:
    container_name: config-server
    image: "springcloud/configserver"
    environment:
      SPRING_CLOUD_CONFIG_SERVER_GIT_URI: "https://github.com/ivona13/Rates"
#      SPRING_CLOUD_CONFIG_SERVER_GIT_USERNAME: "your-github-username"
#      SPRING_CLOUD_CONFIG_SERVER_GIT_PASSWORD: "your-github-password"
    ports:
      - "8888:8888"
  zoo:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zoo
    container_name: zoo
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888
  kafka:
    image: confluentinc/cp-kafka:7.3.0
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo
  kafka-schema-registry:
    image: confluentinc/cp-schema-registry:7.3.0
    hostname: kafka-schema-registry
    container_name: kafka-schema-registry
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:19092
      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    depends_on:
      - zoo
      - kafka
  conduktor-platform:
    image: conduktor/conduktor-platform:latest
    ports:
      - 8082:8082
    volumes:
      - conduktor_data:/var/conduktor
      - type: bind
        source: "./platform-config.yaml"
        target: /opt/conduktor/platform-config.yaml
        read_only: true
    depends_on:
      - kafka
      - kafka-schema-registry
    environment:
      CDK_IN_CONF_FILE: /opt/conduktor/platform-config.yaml
      KAFKA_BOOTSTRAP_SERVER: PLAINTEXT://kafka:19092
      SR_SERVER: "http://kafka-schema-registry:8081"
      ORGANISATION_NAME: "default"
      ADMIN_EMAIL: "admin@conduktor.io"
      ADMIN_PSW: "admin"
      CDK_ADMIN_EMAIL: "admin@conduktor.io"
      CDK_ADMIN_PASSWORD: "admin"

volumes:
  conduktor_data: { }
